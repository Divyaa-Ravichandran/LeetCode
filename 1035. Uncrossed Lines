
URL:  https://leetcode.com/problems/uncrossed-lines/description/



class Solution:
    def maxUncrossedLines(self, nums1: List[int], nums2: List[int]) -> int:
        
        self.nums1=nums1
        self.nums2=nums2
        n=len(nums1)
        m=len(nums2)
        
        return self.solve(n-1,m-1)
    
    def solve(self,i,j):
        if i<0 or j<0:
            return 0
        
        first=self.solve(i-1,j)
        third=self.solve(i,j-1)
        second=0
        if self.nums1[i]==self.nums2[j]:
            second=1+self.solve(i-1,j-1)
        return max(first,second,third)

        
   OR
   
   


class Solution:
    def maxUncrossedLines(self, nums1: List[int], nums2: List[int]) -> int:
        
        m, n = len(nums1), len(nums2)
        
        dp = [0] * (n + 1)
        for i in range(1, m + 1):
            prev = 0
            for j in range(1, n + 1):
                curr = dp[j]
                if nums1[i-1] == nums2[j-1]:
                    dp[j] = prev + 1
                else:
                    dp[j] = max(dp[j-1], curr)
                prev = curr
        return dp[n]
