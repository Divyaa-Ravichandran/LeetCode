
URL: https://leetcode.com/problems/3sum/

class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        if len(nums) in [0,1,2]:
            return []
        else:
            sorted_nums=sorted(nums)
            triplet_list=[]
            for i in range(0,len(sorted_nums)-2):
                start=i+1
                end=len(sorted_nums)-1
                while(start<end):
                    curr_sum=sorted_nums[i]+sorted_nums[start]+sorted_nums[end]
                    if curr_sum==0:
                        triplet = (sorted_nums[i], sorted_nums[start], sorted_nums[end])
                        triplet_list.append(triplet)
                        start+=1
                        end-=1

                    elif curr_sum<0:
                        start+=1
                    else:
                        end-=1

            return [list(entries) for entries in set(triplet_list)]
