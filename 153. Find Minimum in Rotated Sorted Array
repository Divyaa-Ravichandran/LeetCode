

URL:  https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/


class Solution:
    def findMin(self, nums: List[int]) -> int:
        n=len(nums)
        arr=[]
        for idx,ele in enumerate(nums):
            arr.append([ele,idx])
        x=min(arr)
        return x[0]
        
        
     
 OR
 
 

class Solution:
    def findMin(self, nums: List[int]) -> int:
        
        l, r = 0, len(nums) - 1
        
        while l < r:
            mid = (l + r) // 2
            if nums[mid] >= nums[0] and nums[mid] > nums[-1]:
                l = mid + 1
            elif nums[mid] > nums[0]:
                r = mid - 1
            else:
                r = mid
        
        return nums[r]
       
       
  OR
  
  
  
class Solution:
    def findMin(self, nums: List[int]) -> int:
        start=0
        end=len(nums)-1

        while start<end:
            mid=(start+end)//2
            if nums[mid]>=nums[end]:
                start=mid+1
            else:
                end=mid

        return nums[end]
