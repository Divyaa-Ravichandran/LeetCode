


URL: https://leetcode.com/problems/container-with-most-water/




class Solution:
    def maxArea(self, A: List[int]) -> int:
        
        l = 0
        r = len(A) -1
        area = 0
     
        while l < r:
        # Calculating the max area
            area = max(area, min(A[l],A[r]) * (r - l))
     
            if A[l] < A[r]:
                l += 1
            else:
                r -= 1
        return area
        
        
        
 OR
        
        
        
class Solution:
    def maxArea(self, A: List[int]) -> int:
        

        l, r, area = 0, len(A) - 1, 0
        while l < r:
            min_height=min(A[l], A[r])
            area = max(area, (r - l) * min_height)
            if A[l] < A[r]:
                l+=1
                while A[l]<min_height:
                    l+=1
            else:
                r-=1
                while A[r]<min_height:
                    r-=1			
        return area
