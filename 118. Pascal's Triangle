



class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        
        ans=[]
        for i in range(1,numRows+1):
            row=[1]*i
            for j in range(1,i-1):
                row[j]=ans[i-2][j]+ans[i-2][j-1]

            ans.append(row)
        return ans
        

OR

class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        dp=[]
        for i in range(1,numRows+1):
            dp.append([0]*i)
        for i in range(0,numRows):
            for j in range(0,i+1):
                if(j==0 or j==i):
                    #For leading and trailing of the row the 1 should be appended....
                    dp[i][j]=1
                else:
                    #The previous values both are added together
                    dp[i][j]=dp[i-1][j-1]+dp[i-1][j]
        return dp
            
 
OR



class Solution:
    def generate(self, numRows: int) -> List[List[int]]:


        if numRows <= 0:
            return []
        result = []
        pre = []
        pre.append(1)
        result.append(pre)
        for i in range(0, numRows-1):
            curr = []
            curr.append(1)
            for j in range(0, len(pre)-1):
                curr.append(pre[j]+pre[j+1])
            curr.append(1)
            result.append(curr)
            pre = curr
        return result
