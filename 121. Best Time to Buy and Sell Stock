
URL :  https://leetcode.com/problems/best-time-to-buy-and-sell-stock/


class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        
        if len(prices)==0:
            return 0
        else:
            max_profit=0
            min_price=prices[0]
            for i in range(len(prices)):
                profit=prices[i]-min_price
                max_profit=max(max_profit,profit)
                min_price=min(min_price,prices[i])

            return max_profit
            

OR




class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        
        buy, sell = 0, 0
        currProfit , maxProfit = 0 , 0
        for i in range(1,len(prices)):
            if prices[i] < prices[buy] :
                buy , sell = i , i
            if prices[i] > prices[sell]:
                sell = i
            
            if sell > buy:
                currProfit = prices[sell] - prices[buy]
                if maxProfit > currProfit:
                    maxProfit = maxProfit
                else:
                    maxProfit = currProfit
        return maxProfit

