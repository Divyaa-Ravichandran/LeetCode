

URL: https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description/



class Solution:
    def longestSubarray(self, nums: List[int]) -> int:

        '''
        N=len(nums)

        allones=0
        onezero=0
        res=0

        for n in nums:
            if n==1:
                allones+=1
                onezero+=1
            else:
                onezero=allones
                allones=0

            res=max(res,allones,onezero)

        return N-1 if res==N else res
        '''

        n=len(nums)
        prefix=[ 0 for _ in range(len(nums)+1)]
        suffix=[ 0 for _ in range(len(nums)+1)]

        for i in range(len(nums)):
            if nums[i]==1:
                prefix[i]=prefix[i-1]+1

        for i in range(len(nums)-1,-1,-1):
            if nums[i]==1:
                suffix[i]=suffix[i+1]+1
        
        mx=0

        for i in range(1,n):
            mx=max(mx,prefix[i-1]+suffix[i+1])

        return mx


        
