

URL:  https://leetcode.com/problems/put-marbles-in-bags/description/


class Solution:
    def putMarbles(self, weights: List[int], k: int) -> int:
        
        if k == 1 or k == len(weights):
            return 0
        ans = 0
        ans1 = 0
        k -= 1
        res1 = [weights[i] + weights[i+1] for i in range(len(weights) - 1)]
        res = [weights[i] + weights[i+1] for i in range(len(weights) - 1)]
        res1.sort(reverse=True)
        res.sort()
        for i in range(k):
            ans1 += res1[i]
        for i in range(k):
            ans += res[i]
        return (ans1 - ans)

#OR
        n=len(weights)
        minheap=[]
        maxheap=[]

        for i in range(0,n):
            val=weights[i]+weights[i+1]
            minheap.append(val)
            maxheap.append(-val)

        heapify(minheap)
        heapify(maxheap)

        sum1=0
        sum2=0

        while k-1>0:
            sum1+=heappop(minheap)
            sum2-=heappop(maxheap)
            k-=1

        return sum2-sum1

OR

        n = len(W)
        pairs = [0] * (n - 1)
        for i in range(1, n):
            pairs[i - 1] = W[i] + W[i - 1]
        pairs.sort()
        
        min_sum = 0
        max_sum = 0
        for i in range(k - 1):
            min_sum += pairs[i]
            max_sum += pairs[n - i - 2]
        
        return max_sum - min_sum

        


